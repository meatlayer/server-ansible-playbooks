#Find temp password
- name: Get temporary MySQL root password
  shell: grep 'temporary password' {{ mysql_role.def_log }} | awk '{print $NF}'
  register: mysql_root_temp_password
  when: ansible_os_family == "RedHat"
  tags:
    - mysql

#Setting new ROOT password to CentOS
- name: Set the MySQL root password
  shell: mysqladmin -u root --password='{{ mysql_root_temp_password.stdout }}' password '{{ mysql.password }}'
  register: mysql.password_result
  when: mysql.password is defined and mysql.password != "" and ansible_os_family == "RedHat"
  tags:
    - mysql

- name: Check if MySQL root password file exists
  stat:
    path: /etc/mysql/debian.cnf
  register: mysql_config_result

- name: Set the MySQL root password
  command: mysqladmin -u root password '{{ mysql.password }}'
  register: mysql_password_result
  when: mysql.password is defined and mysql.password != "" and ansible_os_family == "Debian" and mysql_config_result.stat.size == 0
  tags:
    - mysql

#Setting new ROOT password to authorization file
- name: setup MySQL password file
  template:
    src: root_my.cnf.j2
    dest: /root/.my.cnf
  when: mysql.password is defined and mysql.password != ""
  tags:
    - mysql

- name: removing empty password users
  mysql_user: 
    name="" 
    password="" 
    host={{ ansible_fqdn }} 
    priv=*.*:USAGE 
    state=absent 
    login_user=root 
    login_password={{ mysql.password }}
  when: mysql.password is defined and mysql.password != ""
  tags:
    - mysql

- name: removing the MySQL test database
  mysql_db: 
    db=test 
    state=absent 
    login_user=root 
    login_password={{ mysql.password }}
  tags:
    - mysql

- name: removing the MySQL preseed file
  file: 
    path=/root/mysql.seed 
    state=absent
  when: ansible_os_family == "Debian"
