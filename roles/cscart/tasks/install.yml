---
- name: Set directory permissions
  ansible.builtin.file:
    path: "{{ stores_dir }}/{{ item.key }}"
    state: directory
    owner: "{{ deploy.user }}"
    group: "{{ deploy.group }}"
    mode: 0755
  when: item.value.cart.dist is defined
  with_dict: "{{ stores }}"
  tags:
    - cscart
    - deploy


- name: copying local_conf.php
  template:
    src: local_conf.php.j2
    dest: "{{ stores_dir }}/{{ store.key }}/local_conf.php"
    owner: "{{ deploy.user }}"
    group: "{{ deploy.group }}"
    mode: 0666
  when: store.value.cart.dist is defined
  with_dict: "{{ stores }}"
  loop_control:
    loop_var: store
  tags:
    - cscart
    - deploy


- name: Set file permissions for config.local.php
  ansible.builtin.command:
    cmd: "chmod 0666 {{ stores_dir }}/{{ item.key }}/config.local.php"
    warn: false
  when: item.value.cart.dist is defined
  with_dict: "{{ stores }}"
  ignore_errors: yes
  tags:
    - cscart
    - deploy


- name: Set database settings in config.php
  ansible.builtin.template:
    src: config.php.j2
    dest: "{{ stores_dir }}/{{ item.key }}/install/config.php"
    mode: 0666
  when: item.value.cart.dist is defined
  with_dict: "{{ stores }}"
  tags:
    - cscart
    - deploy


- name: setting owner
  ansible.builtin.command:
    cmd: "chown -R {{ deploy.user }}:{{ deploy.group }} {{ stores_dir }}/{{ item.key }}/"
    warn: false
  when: item.value.cart.dist is defined
  with_dict: "{{ stores }}"
  ignore_errors: yes
  tags:
    - cscart
    - deploy


- name: installing CS-Cart
  shell: /usr/bin/env php7.4 index.php
  args:
    chdir: "{{ stores_dir }}/{{ item.key }}/install"
  when: item.value.cart.dist is defined
  with_dict: "{{ stores }}"
  loop_control:
    loop_var: item
  tags:
    - cscart
    - deploy


- name: Execute SQL enable SSL in CS-Cart secure_storefront
  shell: >
    mysql -e "USE cscart; UPDATE cscart_settings_objects SET value = 'Y' WHERE name = 'secure_storefront';"
  args:
    executable: /bin/bash
  tags:
    - deploy


- name: Execute SQL enable SSL in CS-Cart secure_admin
  shell: >
    mysql -e "USE cscart; UPDATE cscart_settings_objects SET value = 'Y' WHERE name = 'secure_admin';"
  args:
    executable: /bin/bash
  tags:
    - deploy


- name: Remove the /install directory
  shell: rm -rf "{{ stores_dir }}/{{ item.key }}/install"
  warn: false
  when: item.value.cart.dist is defined
  with_dict: "{{ stores }}"
  loop_control:
    loop_var: item
  tags:
    - cscart
    - deploy
